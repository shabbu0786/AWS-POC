# This is a basic workflow to help you get started with Actions

name: pipeline to deploy aws resources

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    #branches: [ "main" ]
  # pull_request:
    branches: [ "feature/aws_resources_deploy" ]
    paths:
      - terraform

  # Allows you to run this workflow manually from the Actions tab
  #workflow_dispatch:
env:
  # verbosity setting for Terraform logs
  #TF_LOG: INFO
  # Credentials for deployment to AWS
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  # S3 bucket for the Terraform state
  # BUCKET_TF_STATE: ${{ secrets.BUCKET_TF_STATE}}
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  terraform:
    name: create aws resources
    runs-on: ubuntu-latest
  # This workflow contains a single job called "build"
  # build:
  #   # The type of runner that the job will run on
  #   runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Code CheckOut
        uses: actions/checkout@v4
      
      # - name: Checkout the repository to the runner
      #   uses: actions/checkout@v2

      # - name: Setup Terraform with specified version on the runner
      #   uses: hashicorp/setup-terraform@v2
      #   with:
      #     terraform_version: 1.3.0
      
      - name: Terraform init
        id: init
        run: terraform init
        # run: terraform init -backend-config="bucket=$BUCKET_TF_STATE"

      - name: Terraform format
        id: fmt
        run: terraform fmt -check
      
      - name: Terraform validate
        id: validate
        run: terraform validate

      - name: Terraform plan
        id: plan
        run: terraform plan 
        # continue-on-error: true
    

      - name: Terraform Apply
        #if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve 